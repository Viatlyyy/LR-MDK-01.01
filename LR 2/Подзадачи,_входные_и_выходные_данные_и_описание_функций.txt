Лабораторная работа №2, Вариант 7
Описание этапов решения задачи

Описание подзадач решения:

1. Структура данных: Определение класса Product для хранения информации о товаре (название, категория, история цен).
2. Заполнение данных: Создание начальных данных о товарах (ручное заполнение в DataFetchingStep).
3. Запрос категории: Получение от пользователя категории товара для поиска.
4. Поиск товаров: Фильтрация списка товаров для получения только тех, которые относятся к указанной категории.
5. Расчет средней цены: Вычисление средней цены для каждого товара на основе его истории цен (без использования LINQ).
6. Сортировка товаров: Сортировка списка товаров по убыванию средней цены (с использованием алгоритма "пузырьковой сортировки", без LINQ).
7. Вывод результатов: Вывод на экран списка товаров, отсортированных по средней цене.

Описание входных/выходных данных для каждой подзадачи:

1. Структура данных:
    *   Входные данные: Нет.
    *   Выходные данные: Класс Product с полями Name (string), Category (string), PriceHistory (List<decimal>).
2. Заполнение данных:
    *   Входные данные: Нет.
    *   Выходные данные: Список товаров (List<Product>) с заполненными данными.
3. Запрос категории:
    *   Входные данные: Нет.
    *   Выходные данные: Строка (string) с категорией, введенной пользователем.
4. Поиск товаров:
    *   Входные данные: Строка (string) с категорией, список всех товаров (List<Product>).
    *   Выходные данные: Список товаров (List<Product>), относящихся к указанной категории.
5. Расчет средней цены:
    *   Входные данные: Список цен (List<decimal>).
    *   Выходные данные: Число (decimal) - средняя цена товара.
6. Сортировка товаров:
    *   Входные данные: Список товаров (List<Product>).
    *   Выходные данные: Отсортированный список товаров (List<Product>) по убыванию средней цены.
7. Вывод результатов:
    *   Входные данные: Отсортированный список товаров (List<Product>).
    *   Выходные данные: Вывод на консоль списка товаров с названиями и средней ценой.

Определение функций:

*   class Product:
    *   string Name { get; set; }
    *   string Category { get; set; }
    *   List<decimal> PriceHistory { get; set; }

*   class DataFetchingStep:
    *   List<Product> GetProductData()
      

*   class CategoryRequestStep:
    *   string RequestCategory()
       

*   class ProductSearchStep:
    *   List<Product> FindProductsByCategory(string category, List<Product> allProducts)
        
*   class AveragePriceCalculationStep:
    *   decimal CalculateAveragePrice(List<decimal> prices)
        

*   class ProductSortingStep:
    *   List<Product> SortProducts(List<Product> products)
       
*   class Program:
    *   static void Main(string[] args)
      